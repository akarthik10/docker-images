name: Build and publish

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  changed-files:
    name: Gather changes
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      publish: ${{ steps.set-publish.outputs.publish }}
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          json: true
          dir_names: true
          dir_names_max_depth: 1
          files_ignore: |
            .github/**
            README.md
      - name: List all changed files
        run: echo '${{ steps.changed-files.outputs.all_changed_files }}'
      - id: set-matrix
        run: echo "matrix={\"container\":${{ steps.changed-files.outputs.all_changed_files }}}" >> "$GITHUB_OUTPUT"
      - id: set-publish
        run: echo "publish=${{ steps.changed-files.outputs.all_changed_files != '[]'  }}" >> "$GITHUB_OUTPUT"        
      - name: List reason for run
        run: echo "${{ github.event_name }} triggered this run"

  matrix-job:
    name: Run Build Matrix
    runs-on: ubuntu-latest
    permissions:
      packages: write
    needs: [changed-files]
    if: ${{ needs.changed-files.outputs.publish == 'true' }}
    strategy:
      matrix: ${{ fromJSON(needs.changed-files.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false
    concurrency:
      group: ${{matrix.container}}-${{ github.head_ref || github.ref_name }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        
      - name: Echo concurrency group
        run: echo "${{matrix.container}}-${{ github.head_ref || github.ref_name }}"
        
      - name: Publish to docker
        id: collect-changes
        uses: ./.github/actions/publish-docker
        with:
          image: ${{ matrix.container }}
          token: ${{ secrets.GITHUB_TOKEN }}

  update-readme:
    name: Update README
    runs-on: ubuntu-latest
    needs: [changed-files]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Get package list
        id: get-packages
        env:
          GH_TOKEN: ${{ github.token }}
          GH_DEBUG: true
        run: |
          gh api -XGET "users/${{ github.repository_owner }}/packages" -F package_type=container > temp.txt
          echo temp.txt
          # gh api "/users/${{ github.repository_owner }}/packages?package_type=container" | jq -r '.[] | select(.repository.full_name == "${{ github.repository }}").name' | sort > packages.txt

      - name: Generate table
        id: generate-table
        run: |
          echo "| Package | Latest Version | Last Updated |" > table.md
          echo "|---------|----------------|--------------|" >> table.md
          while IFS= read -r package; do
            latest_version=$(gh api "/users/${{ github.repository_owner }}/packages/container/$package/versions" | jq -r 'map(select(.metadata.container.tags | length > 0)) | .[0] | .metadata.container.tags[0]')
            last_updated=$(gh api "/users/${{ github.repository_owner }}/packages/container/$package/versions" | jq -r 'map(select(.metadata.container.tags | length > 0)) | .[0] .updated_at ')
            echo "| $package | $latest_version | $last_updated |" >> table.md
          done < packages.txt

      - name: Insert table into README
        run: |
          awk 'BEGIN {p=1} /<!-- AUTO-GENERATED-CONTENT-START -->/ {print;system("cat table.md");p=0} /<!-- AUTO-GENERATED-CONTENT-END -->/ {p=1} p' README.md > README.tmp && mv README.tmp README.md
          cat packages.txt
          cat table.md
          cat README.md
    
      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add README.md
          git commit -m "Update README with package information"
          git push
